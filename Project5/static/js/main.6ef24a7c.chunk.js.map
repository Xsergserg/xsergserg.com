{"version":3,"sources":["media/beep.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","minutes","seconds","sesLength","breakLength","buttonStyle","display","timer","timerStyle","fontFamily","fontSize","margin","color","audio","document","getElementById","App","state","handlePlayPause","bind","handleSesInc","handleSesDec","handleBrInc","handleBrDec","zeroAdder","handleReset","timerLogic","beepAudio","this","timerID","setInterval","setState","prevState","clearInterval","obj","num","String","active","play","setTimeout","pause","currentTime","className","id","onClick","style","preload","src","require","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","basename","path","component","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ef24a7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beep.0e67839d.mp3\";","import React from 'react';\nimport './App.css';\n\nconst initialState = {\n  minutes: 25,\n  seconds: 0,\n  sesLength: 25,\n  breakLength: 5,\n  buttonStyle: \"fas fa-play buttons\",\n  display: \"Session\",\n  timer: false,\n  timerStyle: {\n    fontFamily: \"digital-7\",\n    fontSize: '70px',\n    margin: '0',\n    color: 'antiquewhite'\n  },\n  audio: document.getElementById('beep')\n};\n\n\n\nclass App extends React.Component {\n    constructor(){\n      super();\n      this.state=initialState;\n      this.handlePlayPause=this.handlePlayPause.bind(this);\n      this.handleSesInc=this.handleSesInc.bind(this);\n      this.handleSesDec=this.handleSesDec.bind(this);\n      this.handleBrInc=this.handleBrInc.bind(this);\n      this.handleBrDec=this.handleBrDec.bind(this);\n      this.zeroAdder=this.zeroAdder.bind(this);\n      this.handleReset=this.handleReset.bind(this);\n      this.timer=this.timer.bind(this);\n      this.timerLogic=this.timerLogic.bind(this);\n      this.beepAudio=this.beepAudio.bind(this);\n    }\n\n    timer(){\n      if (this.state.timer){\n        this.timerID = setInterval(() => this.setState((prevState)=>this.timerLogic(prevState)), 1000)\n      }\n      else{\n        clearInterval(this.timerID);\n      }\n    }\n    timerLogic(obj) {\n      if (obj.seconds > 0){\n        return {seconds: obj.seconds-1}\n      }\n      if (obj.seconds === 0 && obj.minutes > 1){\n        return {\n          minutes: obj.minutes-1,\n          seconds: 59\n        }\n      }else if(obj.seconds === 0 && obj.minutes === 1){\n        return {\n          timerStyle: {\n            fontFamily: \"digital-7\",\n            fontSize: '70px',\n            margin: '0',\n            color: 'red'\n          },\n          minutes: obj.minutes-1,\n          seconds: 59\n        }\n      }else{\n        this.beepAudio();\n        return (\n          obj.display === \"Session\" ?\n          {\n            timerStyle: {\n              fontFamily: \"digital-7\",\n              fontSize: '70px',\n              margin: '0',\n              color: 'antiquewhite'\n            },\n            display: \"Break\",\n            minutes: obj.breakLength,\n            seconds: 0\n          }:{\n            timerStyle: {\n              fontFamily: \"digital-7\",\n              fontSize: '70px',\n              margin: '0',\n              color: 'antiquewhite'\n            },\n            display: \"Session\",\n            minutes: obj.breakLength,\n            seconds: 0\n          }\n        )\n      }\n    }\n    handleReset(){\n      this.setState(()=>initialState, ()=>this.timer(), this.beepAudio('stop'))\n    }\n    handlePlayPause(){\n      this.setState((function (prevState) {\n        return (\n          !prevState.timer ? {\n            buttonStyle: \"fas fa-pause buttons\",\n            timer: true\n        } : {\n          buttonStyle: \"fas fa-play buttons\",\n          timer: false\n        }\n      ) \n      }), () => this.timer());\n    }\n    handleSesInc(){\n      if (this.state.timer === false && this.state.sesLength < 60){\n        this.setState(function (prevState) {\n          return (\n            this.state.display === 'Session' ? {\n            sesLength: prevState.sesLength+1,\n            minutes: prevState.sesLength+1,\n            seconds: 0\n            }:{\n              sesLength: prevState.sesLength+1\n            }\n          )\n        });\n      }\n    }\n    handleSesDec(){\n      if (this.state.timer === false && this.state.sesLength > 1){\n        this.setState(function (prevState) {\n          return (\n            this.state.display === 'Session' ? {\n            sesLength: prevState.sesLength-1,\n            minutes: prevState.sesLength-1,\n            seconds: 0\n            }:{\n              sesLength: prevState.sesLength-1\n            }\n          )\n        });\n      }\n    }\n    handleBrInc(){\n      if (this.state.timer === false && this.state.breakLength < 60){\n        this.setState(function (prevState) {\n          return (\n            this.state.display === 'Break' ? {\n            breakLength: prevState.breakLength+1,\n            minutes: prevState.breakLength+1,\n            seconds: 0\n            }:{\n              breakLength: prevState.breakLength+1\n            }\n          )\n        });\n      }\n    }\n    handleBrDec(){\n      if (this.state.timer === false && this.state.breakLength > 1){\n        this.setState(function (prevState) {\n          return (\n            this.state.display === 'Break' ? {\n            breakLength: prevState.breakLength-1,\n            minutes: prevState.breakLength-1,\n            seconds: 0\n            }:{\n              breakLength: prevState.breakLength-1\n            }\n          )\n        });\n      }\n    };\n    zeroAdder(num){\n      return(\n        num >= 0 && num <=9 ? '0'+String(num) : num\n      )};\n    beepAudio(active = 'play'){\n      let audio = document.getElementById('beep');\n      if (active === 'play'){\n        audio.play();\n        setTimeout(() => audio.pause(), 2000);\n      }else if(active === 'stop'){\n        audio.pause();\n      }\n      audio.currentTime = 0;\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='timerBody'>\n    <h1 className='label'>Mega Timer</h1>\n          <div className='break'>\n            <h2 id='break-label'>Break Length</h2>\n            <div className='sectorsButtons'>\n            <i id='break-increment' className=\"fas fa-angle-double-up signs\" onClick={this.handleBrInc}></i>\n              <p id='break-length'>{this.state.breakLength}</p>\n              <i id='break-decrement' className=\"fas fa-angle-double-down signs\" onClick={this.handleBrDec}></i>\n            </div>\n          </div>\n          <div className='session'>\n            <h2 id='session-label'>Session Length</h2>\n            <div className='sectorsButtons'>\n              <i id='session-increment' className=\"fas fa-angle-double-up signs\" onClick={this.handleSesInc}></i>\n              <p id='session-length'> {this.state.sesLength} </p>\n              <i id='session-decrement' className=\"fas fa-angle-double-down signs\" onClick={this.handleSesDec}></i>\n            </div>\n          </div>\n          <div className='timer'>\n            <div className='timer-container'>\n              <h2 id='timer-label'>{this.state.display}</h2>\n              <p id='time-left' style={this.state.timerStyle}>{this.zeroAdder(this.state.minutes)}:{this.zeroAdder(this.state.seconds)}</p>\n              <audio id='beep' preload=\"auto\" src={require('./media/beep.mp3')}></audio>\n            </div>\n          </div>\n          <div id=\"button-container\">\n          <i id=\"start_stop\" className={this.state.buttonStyle} onClick={this.handlePlayPause}></i>\n          <i id='reset' className=\"fas fa-sync buttons\" onClick={this.handleReset}></i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nReactDOM.render(\n\t(\n\t\t<BrowserRouter basename=\"/Project5\">\n\t\t\t<Route path='/' component={App}/>\n\t\t</BrowserRouter>\n\t), \n\tdocument.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}